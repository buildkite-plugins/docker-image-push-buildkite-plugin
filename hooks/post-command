#!/bin/bash
set -euo pipefail

# Load plugin library
# shellcheck source=lib/plugin.bash
source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/../lib/plugin.bash"

main() {
  echo "--- :docker: Saving Docker cache"
  log_info "Saving Docker cache"

  plugin_read_config

  # Skip if save is disabled
  if [[ "${BUILDKITE_PLUGIN_DOCKER_CACHE_SAVE}" != "true" ]]; then
    log_info "Cache save disabled, skipping."
    exit 0
  fi

  # Check dependencies
  check_dependencies

  local provider="${BUILDKITE_PLUGIN_DOCKER_CACHE_PROVIDER}"
  local cache_key="${DOCKER_CACHE_KEY:-}"

  if [[ -z "$cache_key" ]]; then
    log_error "Cache key not found. Make sure the environment hook ran successfully."
    exit 1
  fi

  # Check if the build was successful
  local build_exit_code="${BUILDKITE_COMMAND_EXIT_STATUS:-0}"
  if [[ "$build_exit_code" != "0" ]]; then
    log_warning "Build failed (exit code: $build_exit_code), skipping cache save!"
    exit 0
  fi

  # Attempt to save cache
  if save_cache "$provider" "$cache_key"; then
    log_success "Cache save completed!"
  else
    log_error "Cache save failed â€“ failing build."
    exit 1
  fi
}

main "$@"
